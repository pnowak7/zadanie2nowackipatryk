name: CI/CD Docker Simple Build

# Wykonuj workflow przy każdym pushie do main
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build, Scan i Push to GHCR (amd64 only)
    runs-on: ubuntu-latest

    steps:
      # 1. Pobierz kod z repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Zainstaluj Buildx (żeby mieć dostęp do docker/build-push-action)
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # 3. Zaloguj się do GitHub Container Registry (GHCR)
      #    - używamy GITHUB_TOKEN, więc nie trzeba definiować GHCR_TOKEN ręcznie
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Buduj obraz tylko pod amd64 i wypchnij go od razu do GHCR
      - name: Build and push Docker image (amd64)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/weather-app:latest

      # 5. Skanuj wypchnięty obraz Trivy (HIGH, CRITICAL)
      - name: Scan pushed image with Trivy
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: image
          image-ref: ghcr.io/${{ github.repository_owner }}/weather-app:latest
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL
          ignore-unfixed: true
